// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Wrc.Web.Dal;

namespace Wrc.Web.Migrations
{
    [DbContext(typeof(WrcContext))]
    partial class WrcContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Wrc.Web.Dal.Replays.AccountRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EugenUserId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("account");
                });

            modelBuilder.Entity("Wrc.Web.Dal.Replays.PlayerRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountRecordId");

                    b.Property<int>("Alliance");

                    b.Property<string>("Avatar");

                    b.Property<string>("DeckContent");

                    b.Property<string>("DeckName");

                    b.Property<double>("Elo");

                    b.Property<string>("IALevel");

                    b.Property<int>("IncomeRate");

                    b.Property<bool>("IsEnteredInLobby");

                    b.Property<int>("Level");

                    b.Property<string>("Name");

                    b.Property<int>("Number");

                    b.Property<int>("Rank");

                    b.Property<int?>("ReplayRecordId");

                    b.Property<int>("ScoreLimit");

                    b.Property<string>("TeamName");

                    b.Property<bool>("WasReady");

                    b.HasKey("Id");

                    b.HasIndex("AccountRecordId");

                    b.HasIndex("ReplayRecordId");

                    b.ToTable("player");
                });

            modelBuilder.Entity("Wrc.Web.Dal.Replays.ReplayRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AI");

                    b.Property<bool>("AllowObservers");

                    b.Property<string>("DateConstraint");

                    b.Property<int>("DownloadCount");

                    b.Property<string>("FileHash");

                    b.Property<string>("FileName");

                    b.Property<string>("GameMapCode");

                    b.Property<string>("GameModeCode");

                    b.Property<string>("GameTypeCode");

                    b.Property<int>("IncomeRate");

                    b.Property<int>("InitMoney");

                    b.Property<bool>("IsNetworkMode");

                    b.Property<bool>("IsPrivate");

                    b.Property<int>("MaxPlayers");

                    b.Property<string>("NationConstraint");

                    b.Property<int>("ScoreLimit");

                    b.Property<string>("Seed");

                    b.Property<string>("ServerName");

                    b.Property<string>("ThematicConstraint");

                    b.Property<string>("Title");

                    b.Property<DateTime>("UploadedAt");

                    b.Property<string>("Version");

                    b.Property<string>("VictoryConditionCode");

                    b.HasKey("Id");

                    b.ToTable("replay");
                });

            modelBuilder.Entity("Wrc.Web.Dal.Replays.PlayerRecord", b =>
                {
                    b.HasOne("Wrc.Web.Dal.Replays.AccountRecord", "AccountRecord")
                        .WithMany()
                        .HasForeignKey("AccountRecordId");

                    b.HasOne("Wrc.Web.Dal.Replays.ReplayRecord", "ReplayRecord")
                        .WithMany("Players")
                        .HasForeignKey("ReplayRecordId");
                });
#pragma warning restore 612, 618
        }
    }
}
